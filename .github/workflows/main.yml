name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        pg-version: ['13', '14', '15', '16', '17', '18']

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Use Cachix Cache
        uses: cachix/cachix-action@v10
        with:
          name: nxpg
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build
        run: nix-shell --run "xpg --cassert -v ${{ matrix.pg-version }} build"

      - name: Run tests
        run: nix-shell --run "xpg --cassert -v ${{ matrix.pg-version }} test"

      - if: ${{ failure() }}
        run: cat regression.diffs

  test-on-macos:
    runs-on: macos-15

    strategy:
      matrix:
        pg-version: ['15', '17']

    steps:
      - uses: actions/checkout@v4

      - name: install nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: use cachix cache
        uses: cachix/cachix-action@v10
        with:
          name: nxpg
          authtoken: ${{ secrets.cachix_auth_token }}

      - name: build
        run: nix-shell --run "xpg --cassert -v ${{ matrix.pg-version }} build"

      - name: run tests
        run: nix-shell --run "xpg --cassert -v ${{ matrix.pg-version }} test"

      - if: ${{ failure() }}
        run: cat regression.diffs


  coverage:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        pg-version: ['17']

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30

      - name: Use Cachix Cache
        uses: cachix/cachix-action@v10
        with:
          name: nxpg
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Coverage
        run: nix-shell --run "xpg -v ${{ matrix.pg-version }} coverage"

      - name: Send coverage to Coveralls
        uses: coverallsapp/github-action@v2.3.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          files: ./build-${{ matrix.pg-version }}/coverage.info

  style:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Use Cachix Cache
        uses: cachix/cachix-action@v10
        with:
          name: nxpg
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Run style check
        run: nix-shell --run "supautils-style-check"
