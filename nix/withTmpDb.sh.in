set -euo pipefail

tmpdir="$(mktemp -d)"

export PGDATA="$tmpdir"
export PGHOST="$tmpdir"
export PGUSER=postgres
export PGDATABASE=postgres

trap 'pg_ctl stop -m i && rm -rf "$tmpdir"' sigint sigterm exit

PGTZ=UTC initdb --no-locale --encoding=UTF8 --nosync -U "$PGUSER"

# pg versions older than 16 don't support adding "-c" to initdb to add these options
# so we just modify the resulting postgresql.conf to avoid an error
echo "dynamic_library_path='\$libdir:$(pwd)'" >> $PGDATA/postgresql.conf
echo "extension_control_path='\$system:$(pwd)'" >> $PGDATA/postgresql.conf
echo "include 'init.conf'" >> $PGDATA/postgresql.conf

cp ./test/init.conf $tmpdir/init.conf

sed -i "s|@TMPDIR@|$tmpdir|g" $tmpdir/init.conf

options="-F -c listen_addresses=\"\" -k $PGDATA"

pg_ctl start -o "$options"

# print notice when creating a TLE
mkdir -p "$tmpdir/privileged_extensions_custom_scripts"
echo "do \$\$
      begin
        if not (@extname@ = ANY(ARRAY['dict_xsyn', 'insert_username'])) then
          return;
        end if;
        if exists (select from pg_available_extensions where name = @extname@) then
          raise notice 'extname: %, extschema: %, extversion: %, extcascade: %', @extname@, @extschema@, @extversion@, @extcascade@;
        end if;
      end \$\$;" > "$tmpdir/privileged_extensions_custom_scripts/before-create.sql"

mkdir -p "$tmpdir/privileged_extensions_custom_scripts/autoinc"
echo 'create extension citext;' > "$tmpdir/privileged_extensions_custom_scripts/autoinc/after-create.sql"

# assert both before-create and after-create scripts are run
mkdir -p "$tmpdir/privileged_extensions_custom_scripts/hstore"
echo 'create table t1();' > "$tmpdir/privileged_extensions_custom_scripts/hstore/before-create.sql"
echo 'drop table t1; create table t2 as values (1);' > "$tmpdir/privileged_extensions_custom_scripts/hstore/after-create.sql"

createdb contrib_regression

psql -v ON_ERROR_STOP=1 -f test/fixtures.sql -d contrib_regression

"$@"
